{"version":3,"sources":["webpack:///./src/app/mytreatmentplan/edit/edit.module.ts","webpack:///./src/app/mytreatmentplan/edit/edit.page.html","webpack:///./src/app/mytreatmentplan/edit/edit.page.scss","webpack:///./src/app/mytreatmentplan/edit/edit.page.ts"],"names":[],"mappings":"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","file":"mytreatmentplan-edit-edit-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EditPage]\n})\nexport class EditPageModule {}\n","module.exports = \"<ion-content padding>\\n\\n    <h2 class='ion-header' style=\\\"padding-bottom: 8%\\\">\\n        My Treatment Plan\\n    </h2>\\n    <h3>\\n        Enter your new Prednisolone treatment plan.\\n        Fill in all dosages in milligrams.\\n    </h3>\\n    <h3 style=\\\"padding-bottom: 10%\\\">\\n        Please only update this under the guidance of your doctor.\\n    </h3>\\n    \\n\\n    <form [formGroup]=\\\"treatmentPlanForm\\\">\\n\\n        <h3><ion-label>Your Doctor's Name</ion-label></h3> \\n        <h5><input formControlName=\\\"doctorsName\\\" type=\\\"text\\\" class=\\\"rcorners\\\" clearInput=\\\"true\\\"></h5>\\n        <div class=\\\"error-messages\\\">\\n            <ng-container *ngFor=\\\"let error of error_messages.doctorsName\\\">\\n            <div class=\\\"error-messages\\\" *ngIf=\\\"treatmentPlanForm.get('doctorsName').hasError(error.type) && (treatmentPlanForm.get('doctorsName').dirty || treatmentPlanForm.get('doctorsName').touched)\\\">\\n                {{ error.message }}\\n            </div>\\n            </ng-container>\\n        </div>\\n\\n        <h2 class='ion-header' style=\\\"padding-top: 10%\\\" style=\\\"padding-bottom: 8%\\\">\\n            Maintenance Dose\\n        </h2>\\n\\n      <ion-grid>\\n          <ion-row>\\n          <ion-col>\\n              <h4>Amount:</h4>\\n              <h4>(mg)</h4>\\n              <h5>\\n                  <input formControlName=\\\"maintenanceDose\\\" type=\\\"number\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          <ion-col>\\n              <h4>Duration:</h4>\\n              <h4>Until</h4>\\n              <h4>Otherwise</h4>\\n          </ion-col>\\n          <ion-col>\\n              <h4>Times:</h4>\\n              <h4>(per int)</h4>\\n              <h5>\\n                  <input formControlName=\\\"maintenanceTimes\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          <ion-col>\\n              <h4>Interval:</h4>\\n              <h4>(days)</h4>\\n              <h5>\\n                  <input formControlName=\\\"maintenanceInterval\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          </ion-row>\\n      </ion-grid>\\n      <div class=\\\"error-messages\\\">\\n        <ng-container *ngFor=\\\"let error of error_messages.maintenanceDose\\\">\\n            <div class=\\\"error-messages\\\" *ngIf=\\\"treatmentPlanForm.get('maintenanceDose').hasError(error.type) && (treatmentPlanForm.get('maintenanceDose').dirty || treatmentPlanForm.get('maintenanceDose').touched)\\\">\\n                {{ error.message }}\\n            </div>\\n        </ng-container>\\n      </div>\\n        <h3 style=\\\"padding-bottom: 10%\\\">\\n            Your maintenance dose is how much Predisolone, in mg, you should\\n            be taking daily, regardless of whether you have relapsed.\\n        </h3>\\n        <h2 class='ion-header' style=\\\"padding-bottom: 8%\\\">\\n            Relapse Plan\\n        </h2>\\n        <h3>\\n            The relapse plan will activate if you have 3 consecutive days of high\\n            protein readings. You will be required to take extra medication until\\n            your protein levels return to normal.\\n            <p>Please enter amounts in mg and times in number of days</p>\\n        </h3>\\n    \\n        <ion-grid>\\n            <ion-row>\\n            <ion-col>\\n                <h4>Amount:</h4>\\n                <h4>(mg)</h4>\\n                <h5>\\n                    <input formControlName=\\\"relapseAmount\\\" type=\\\"number\\\" class=\\\"rcorners1\\\">\\n                </h5>\\n            </ion-col>\\n            <ion-col>\\n              <h4>Duration:</h4>\\n              <h4>Until</h4>\\n              <h4>Remission</h4>\\n            </ion-col>\\n            <ion-col>\\n                <h4>Times:</h4>\\n                <h4>(per int)</h4>\\n                <h5>\\n                    <input formControlName=\\\"relapseTimes\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                </h5>\\n            </ion-col>\\n            <ion-col>\\n                <h4>Interval:</h4>\\n                <h4>(days)</h4>\\n                <h5>\\n                    <input formControlName=\\\"relapseInterval\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                </h5>\\n            </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n        <div class=\\\"error-messages\\\">\\n              <ng-container *ngFor=\\\"let error of error_messages.maintenanceDose\\\">\\n                <div class=\\\"error-messages\\\" *ngIf=\\\"treatmentPlanForm.get('relapseAmount').hasError(error.type) && (treatmentPlanForm.get('relapseAmount').dirty || treatmentPlanForm.get('relapseAmount').touched)\\\">\\n                  {{ error.message }}\\n                </div>\\n              </ng-container>\\n      </div>\\n        <h2 class='ion-header' style=\\\"padding-bottom: 8%\\\" style=\\\"padding-top: 10%\\\">\\n            Remission Plan\\n        </h2>\\n        <h3>\\n            The remission plan will be activated when you are in a relapse and\\n            have 3 consecutive days of low protein levels.\\n        </h3>\\n        <ion-grid>\\n            <ion-row>\\n            <ion-col>\\n                <h4>Amount:</h4>\\n                <h4>(mg)</h4>\\n                <h5>\\n                    <input formControlName=\\\"remissionAmount\\\" type=\\\"number\\\" class=\\\"rcorners1\\\">\\n    \\n                </h5>\\n            </ion-col>\\n            <ion-col>\\n                <h4>Duration:</h4>\\n                <h4>(days)</h4>\\n                <h5>\\n                    <input formControlName=\\\"remissionDuration\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                </h5>\\n            </ion-col>\\n            <ion-col>\\n                <h4>Times:</h4>\\n                <h4>(per int)</h4>\\n                <h5>\\n                    <input formControlName=\\\"remissionTimes\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                </h5>\\n            </ion-col>\\n            <ion-col width=\\\"25%\\\">\\n                <h4>Interval:</h4>\\n                <h4>(days)</h4>\\n                <h5>\\n                    <input formControlName=\\\"remissionInterval\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                </h5>\\n            </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n        <div class=\\\"error-messages\\\">\\n              <ng-container *ngFor=\\\"let error of error_messages.maintenanceDose\\\">\\n                <div class=\\\"error-messages\\\" *ngIf=\\\"treatmentPlanForm.get('remissionAmount').hasError(error.type) && (treatmentPlanForm.get('remissionAmount').dirty || treatmentPlanForm.get('remissionAmount').touched)\\\">\\n                  {{ error.message }}\\n                </div>\\n              </ng-container>\\n      </div>\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col>\\n                    <div formArrayName=\\\"moreRemissionAmount\\\">\\n                        <div *ngFor=\\\"let remissionControl of treatmentPlanForm.get('moreRemissionAmount').controls; let i = index\\\">\\n                            <h5>\\n                                <input [formControlName]=\\\"i\\\"  type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                            </h5>\\n                        </div>\\n                    </div>\\n                </ion-col>\\n                <ion-col>\\n                    <div formArrayName=\\\"moreRemissionDuration\\\">\\n                        <div *ngFor=\\\"let remissionControl of treatmentPlanForm.get('moreRemissionDuration').controls; let i = index\\\">\\n                            <h5>\\n                                <input [formControlName]=\\\"i\\\"  type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                            </h5>\\n                        </div>\\n                    </div>\\n                </ion-col>\\n                <ion-col>\\n                    <div formArrayName=\\\"moreRemissionTimes\\\">\\n                        <div *ngFor=\\\"let remissionControl of treatmentPlanForm.get('moreRemissionTimes').controls; let i = index\\\">\\n                            <h5>\\n                                <input [formControlName]=\\\"i\\\"  type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                            </h5>\\n                        </div>\\n                    </div>\\n                </ion-col>\\n                <ion-col>\\n                    <div formArrayName=\\\"moreRemissionInterval\\\">\\n                        <div *ngFor=\\\"let remissionControl of treatmentPlanForm.get('moreRemissionInterval').controls; let i = index\\\">\\n                            <h5>\\n                                <input [formControlName]=\\\"i\\\"  type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                            </h5>\\n                        </div>\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n    \\n        <div class=\\\"box\\\" style=\\\"padding-bottom: 10%\\\" style=\\\"margin-bottom: 10%\\\">\\n        <h6>\\n            <ion-button class=\\\"bottom-left\\\" size=\\\"small\\\" (click)=\\\"removeRemissionAmount(i); removeRemissionDuration(i); removeRemissionTimes(i); removeRemissionInterval(i)\\\">-</ion-button>\\n        </h6>\\n        <h4>\\n            <ion-button class=\\\"bottom-right\\\" size=\\\"small\\\" (click)=\\\"addRemissionAmount(i); addRemissionDuration(i); addRemissionTimes(i); addRemissionInterval(i)\\\">+   Add another step</ion-button>\\n        </h4>\\n        </div>\\n    \\n        <div class=\\\"box\\\">\\n        <ion-button size=\\\"small\\\" shape=\\\"round\\\" outerDirection=\\\"backward\\\" (click)=\\\"goBack()\\\"> \\n                Cancel\\n        </ion-button>\\n        <ion-button [disabled]=\\\"!treatmentPlanForm.valid\\\" class=\\\"bottom-right\\\" size=\\\"small\\\" shape=\\\"round\\\" routerDirection=\\\"forward\\\" (click)=\\\"presentActionSheet()\\\">\\n            Confirm\\n        </ion-button>\\n        </div>\\n    </form>  \\n    </ion-content>\"","module.exports = \"h3 {\\n  color: white;\\n  text-align: center;\\n  font-size: 15px !important; }\\n\\nh4 {\\n  color: white;\\n  text-align: center;\\n  font-size: 10px !important; }\\n\\nh5 {\\n  color: black;\\n  text-align: center;\\n  font-size: 20px !important; }\\n\\nh6 {\\n  color: white;\\n  text-align: right;\\n  font-size: 10px !important;\\n  background-color: none; }\\n\\n.height {\\n  line-height: 11px; }\\n\\n.error-messages {\\n  color: red;\\n  text-align: center;\\n  font-size: .9em; }\\n\\n.rcorners {\\n  align-content: center;\\n  border-radius: 15px;\\n  background-color: white;\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  border: 0px; }\\n\\n.rcorners1 {\\n  align-content: center;\\n  border-radius: 15px;\\n  background-color: white;\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  margin: 0;\\n  padding: 0;\\n  border: 0px; }\\n\\n.box {\\n  position: relative;\\n  width: 100%;\\n  height: 35px; }\\n\\n.bottom-right {\\n  position: absolute;\\n  bottom: 0;\\n  right: 0; }\\n\\n.bottom-left {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aW5ncGluZ3RzYW5nL0Rlc2t0b3AvQ09NUDAwNjdfMjAxOV9UZWFtMTUvbXlOZXBocm90aWNOb3RlYm9vay9zcmMvYXBwL215dHJlYXRtZW50cGxhbi9lZGl0L2VkaXQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksWUFBWTtFQUNaLGtCQUFrQjtFQUNsQiwwQkFBMEIsRUFBQTs7QUFHOUI7RUFDSSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLDBCQUEwQixFQUFBOztBQUc5QjtFQUNJLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsMEJBQTBCLEVBQUE7O0FBRzlCO0VBQ0ksWUFBWTtFQUNaLGlCQUFpQjtFQUNqQiwwQkFBMEI7RUFDMUIsc0JBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksaUJBQWlCLEVBQUE7O0FBRXJCO0VBQ0ksVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixlQUFlLEVBQUE7O0FBR25CO0VBQ0kscUJBQXFCO0VBQ3JCLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsV0FBVyxFQUFBOztBQUdmO0VBQ0kscUJBQXFCO0VBQ3JCLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsU0FBUztFQUNULFVBQVU7RUFDVixXQUFXLEVBQUE7O0FBR2Y7RUFDSSxrQkFBa0I7RUFDbEIsV0FBVTtFQUNWLFlBQVcsRUFBQTs7QUFHZjtFQUNJLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsUUFBUSxFQUFBOztBQUdaO0VBQ0ksa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxPQUFPLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9teXRyZWF0bWVudHBsYW4vZWRpdC9lZGl0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaDMge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxNXB4ICFpbXBvcnRhbnQ7XG59XG5cbmg0IHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTBweCAhaW1wb3J0YW50O1xufVxuXG5oNSB7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDIwcHggIWltcG9ydGFudDtcbn1cblxuaDYge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBmb250LXNpemU6IDEwcHggIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOyBcbn1cblxuLmhlaWdodCB7XG4gICAgbGluZS1oZWlnaHQ6IDExcHg7XG59XG4uZXJyb3ItbWVzc2FnZXMge1xuICAgIGNvbG9yOiByZWQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogLjllbTtcbn1cblxuLnJjb3JuZXJzIHtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyOiAwcHg7XG59XG5cbi5yY29ybmVyczEge1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7IFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IDBweDtcbn1cblxuLmJveCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjM1cHg7XG59XG5cbi5ib3R0b20tcmlnaHQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG59XG5cbi5ib3R0b20tbGVmdCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xufVxuXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { DatabaseService } from '../../services/database.service';\nimport { FetchReadingService } from '../../services/fetch-reading.service';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { ActionSheetController } from '@ionic/angular'\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit {\n\n  treatmentPlanForm: FormGroup;\n  maintenanceDuration = 99999999;\n  relapseDuration = 99999999;\n  myTreatmentDetails: any;\n  planId: any; \t\n  stateId: any;\n  newPlanId: any;\n  currentState: any;\n\n  error_messages = {\n    'doctorsName': [\n      { type: 'required', message: 'You must enter your Doctor\\'s name to update.' }\n    ],\n    'maintenanceDose': [\n      { type: 'required', message: 'These are all required. Enter \"0\" if none.' }\n    ],\n    'relapseAmount': [\n      { type: 'required', message: 'These are all required. Enter \"0\" if none.' }\n    ],\n    'remissionAmount': [\n      { type: 'required', message: 'These are all required. Enter \"0\" if none.' }\n    ]\n  }\n\n  constructor(public actionSheetController: ActionSheetController, private router: Router, public formBuilder: FormBuilder, private database:DatabaseService, public fetchReading:FetchReadingService) {\n\n      this.treatmentPlanForm = formBuilder.group({\n      \n      doctorsName: new FormControl('',Validators.compose([Validators.required])),\n\n      maintenanceDose: new FormControl('',Validators.compose([Validators.required])),\n      maintenanceTimes: new FormControl(''),\n      maintenanceInterval: new FormControl(''),\n\n      relapseAmount: new FormControl('',Validators.compose([Validators.required])),\n      relapseTimes: new FormControl(''),\n      relapseInterval: new FormControl(''),\n\n      remissionAmount: new FormControl('',Validators.compose([Validators.required])),\n      remissionDuration: new FormControl(''),\n      remissionTimes: new FormControl(''),\n      remissionInterval: new FormControl(''),\n\n      moreRemissionAmount: new FormArray([]),\n      moreRemissionDuration: new FormArray([]),\n      moreRemissionTimes: new FormArray([]),\n      moreRemissionInterval: new FormArray([])\n    });\n\n  }\n\n  public ngOnInit() : void {\n\n    this.fetchReading\n      .treatmentPlanID()\n      .then((data) => \n      {\n         this.planId = data;\n\n         console.log(\"id from db come on 4\", this.planId[0].planId);\t \t\t  \t\t\t\n         this.planId = ((this.planId[0].planId)+1);\n         this.newPlanId = this.planId\n         console.log(\"single #\",this.planId)\n      });\n\n    this.fetchReading\n    .activeTreatmentPlanID()\n    .then((data) => \n    {\n        this.stateId = data;\n\n        console.log(\"id from db come on 4\", this.stateId[0].activeStateId);\t \t\t  \t\t\t\n        this.stateId = this.stateId[0].activeStateId\n    });\n\n  }\n  \n  addRemissionAmount(){\n    (<FormArray>this.treatmentPlanForm.get('moreRemissionAmount')).push(new FormControl(''));\n  }\n\n  removeRemissionAmount(index){\n    (<FormArray>this.treatmentPlanForm.get('moreRemissionAmount')).removeAt(index);\n  }\n\n  addRemissionDuration(){\n    (<FormArray>this.treatmentPlanForm.get('moreRemissionDuration')).push(new FormControl(''));\n  }\n\n  removeRemissionDuration(index){\n    (<FormArray>this.treatmentPlanForm.get('moreRemissionDuration')).removeAt(index);\n  }\n\n  addRemissionTimes(){\n    (<FormArray>this.treatmentPlanForm.get('moreRemissionTimes')).push(new FormControl(''));\n  }\n\n  removeRemissionTimes(index){\n    (<FormArray>this.treatmentPlanForm.get('moreRemissionTimes')).removeAt(index);\n  }\n\n  addRemissionInterval(){\n    (<FormArray>this.treatmentPlanForm.get('moreRemissionInterval')).push(new FormControl(''));\n  }\n\n  removeRemissionInterval(index){\n    (<FormArray>this.treatmentPlanForm.get('moreRemissionInterval')).removeAt(index);\n  }\n\n  async presentActionSheet() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'What state are you currently in?',\n      buttons: [{\n        text: 'Maintenance',\n        handler: () => {\n          console.log('Maintenance selected');\n          this.currentState = 1;\n          this.treatmentplan()\n        }\n      }, {\n        text: 'Relapse',\n        handler: () => {\n          console.log('Relapse selected');\n          this.currentState = 2;\n          this.treatmentplan()\n        }\n      }, {\n        text: 'Remission',\n        handler: () => {\n          console.log('Remission selected');\n          this.currentState = 3;\n          this.treatmentplan()\n        }\n      }]\n    });\n    await actionSheet.present();\n  }\n\n  treatmentplan(){\n    var maintenance = [\"maintenance\",\n      this.maintenanceDuration,\n      this.treatmentPlanForm.value.maintenanceDose, \n      this.treatmentPlanForm.value.maintenanceTimes,\n      this.treatmentPlanForm.value.maintenanceInterval];\n\n    var relapse = [\"relapse\",\n      this.relapseDuration,\n      this.treatmentPlanForm.value.relapseAmount, \n      this.treatmentPlanForm.value.relapseTimes,\n      this.treatmentPlanForm.value.relapseInterval];\n\n    var remission = [\"remission\",\n      this.treatmentPlanForm.value.remissionDuration, \n      this.treatmentPlanForm.value.remissionAmount,\n      this.treatmentPlanForm.value.relapseTimes,\n      this.treatmentPlanForm.value.relapseInterval];\n    \n    var Amount = this.treatmentPlanForm.value.moreRemissionAmount;\n    var Duration = this.treatmentPlanForm.value.moreRemissionDuration;\n    var Times = this.treatmentPlanForm.value.moreRemissionTimes;\n    var Interval = this.treatmentPlanForm.value.moreRemissionInterval;\n\n    var treatmentplan = [maintenance, relapse, remission];\n\n    for (var i = 0; i < Amount.length; i++){ \n      treatmentplan.push(window['remission' + i] = [\"remission\" +i, Duration[i], Amount[i], Times[i], Interval[i]]);\n    };\n\n    console.log('Maintenance: ',maintenance);\n    console.log('Relapse: ',relapse);\n    console.log('Remission',remission);\n    console.log('TreatmentPlan Array: ',treatmentplan);\n    console.log('TreatmentPlan Array: ',treatmentplan[0][1]);\n\n\n    for (var i = 0; i < treatmentplan.length; i++){\n\n      var treatment = [];\n\n      treatment = [\n        this.newPlanId, \n        treatmentplan[i][0], \n        treatmentplan[i][1], \n        treatmentplan[i][2], \n        treatmentplan[i][3], \n        treatmentplan[i][4],\n      ]\n\n      this.database.insertData(treatment, \"treatment_stateReal\");\n      console.log('Treatment: ',treatment);\n      console.log(\"single #\",this.newPlanId)\n\n    }\n\n    var myDoc = {\n      \"doctor_name\": this.treatmentPlanForm.value.doctorsName,\n    }\n    this.database.insertData(myDoc, \"profileDoc\");\n\n    var now = moment().format('YYYY-MM-DD')+' 00:00:00'\n    console.log('Date: ',now);\n\n    var newActiveState = this.stateId + this.currentState;\n    console.log('State New: ',newActiveState);\n\n    this.database.updateActiveTreatmentState(newActiveState, now);\n\n    this.router.navigateByUrl('/tabs/tab3');\n\n  }\n\n  goBack(){\n    this.router.navigateByUrl('tabs/tab3/mytreatmentplan');\n   }\n\n}\n"],"sourceRoot":""}