{"version":3,"sources":["webpack:///./src/app/onboardtreatmentplan/onboardtreatmentplan.module.ts","webpack:///./src/app/onboardtreatmentplan/onboardtreatmentplan.page.html","webpack:///./src/app/onboardtreatmentplan/onboardtreatmentplan.page.scss","webpack:///./src/app/onboardtreatmentplan/onboardtreatmentplan.page.ts"],"names":[],"mappings":"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","file":"onboardtreatmentplan-onboardtreatmentplan-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OnboardtreatmentplanPage } from './onboardtreatmentplan.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OnboardtreatmentplanPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OnboardtreatmentplanPage]\n})\nexport class OnboardtreatmentplanPageModule {}\n","module.exports = \"<ion-content padding>\\n\\n  <h2 class='ion-header' style=\\\"padding-bottom: 8%\\\">\\n      My Treatment Plan\\n  </h2>\\n  <h3 style=\\\"padding-bottom: 10%\\\">\\n      Next we need you to enter your Prednisolone treatment plan.\\n      You will need your doctor to complete this step for you.\\n      Fill in all dosages in milligrams.\\n  </h3>\\n  \\n  <h2 class='ion-header' style=\\\"padding-bottom: 8%\\\">\\n      Maintenance Dose\\n  </h2>\\n  \\n  <form [formGroup]=\\\"treatmentForm\\\" novalidate (ngSubmit)=\\\"save(treatmentForm)\\\"> \\n    <ion-grid>\\n        <ion-row>\\n        <ion-col>\\n            <h4>Amount:</h4>\\n            <h4>(mg)</h4>\\n            <h5>\\n                <input formControlName=\\\"maintenanceDose\\\" type=\\\"number\\\" class=\\\"rcorners1\\\">\\n            </h5>\\n        </ion-col>\\n        <ion-col>\\n            <h4>Duration:</h4>\\n            <h4>Until</h4>\\n            <h4>Otherwise</h4>\\n        </ion-col>\\n        <ion-col>\\n            <h4>Times:</h4>\\n            <h4>(per int)</h4>\\n            <h5>\\n                <input formControlName=\\\"maintenanceTimes\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n            </h5>\\n        </ion-col>\\n        <ion-col>\\n            <h4>Interval:</h4>\\n            <h4>(days)</h4>\\n            <h5>\\n                <input formControlName=\\\"maintenanceInterval\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n            </h5>\\n        </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n    <div class=\\\"error-messages\\\">\\n            <ng-container *ngFor=\\\"let error of error_messages.maintenanceDose\\\">\\n              <div class=\\\"error-messages\\\" *ngIf=\\\"treatmentForm.get('maintenanceDose').hasError(error.type) && (treatmentForm.get('maintenanceDose').dirty || treatmentForm.get('maintenanceDose').touched)\\\">\\n                {{ error.message }}\\n              </div>\\n            </ng-container>\\n    </div>\\n      <h3 style=\\\"padding-bottom: 10%\\\">\\n          Your maintenance dose is how much Predisolone, in mg, you should\\n          be taking daily, regardless of whether you have relapsed.\\n      </h3>\\n      <h2 class='ion-header' style=\\\"padding-bottom: 8%\\\">\\n          Relapse Plan\\n      </h2>\\n      <h3>\\n          The relapse plan will activate if you have 3 consecutive days of high\\n          protein readings! You will be required to take extra medication until\\n          your protein levels return to normal.\\n          <p>Please enter amounts in mg and times in number of days</p>\\n      </h3>\\n  \\n      <ion-grid>\\n          <ion-row>\\n          <ion-col>\\n              <h4>Amount:</h4>\\n              <h4>(mg)</h4>\\n              <h5>\\n                  <input formControlName=\\\"relapseAmount\\\" type=\\\"number\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          <ion-col>\\n            <h4>Duration:</h4>\\n            <h4>Until</h4>\\n            <h4>Remission</h4>\\n          </ion-col>\\n          <ion-col>\\n              <h4>Times:</h4>\\n              <h4>(per int)</h4>\\n              <h5>\\n                  <input formControlName=\\\"relapseTimes\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          <ion-col>\\n              <h4>Interval:</h4>\\n              <h4>(days)</h4>\\n              <h5>\\n                  <input formControlName=\\\"relapseInterval\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          </ion-row>\\n      </ion-grid>\\n      <div class=\\\"error-messages\\\">\\n            <ng-container *ngFor=\\\"let error of error_messages.maintenanceDose\\\">\\n              <div class=\\\"error-messages\\\" *ngIf=\\\"treatmentForm.get('relapseAmount').hasError(error.type) && (treatmentForm.get('relapseAmount').dirty || treatmentForm.get('relapseAmount').touched)\\\">\\n                {{ error.message }}\\n              </div>\\n            </ng-container>\\n    </div>\\n      <h2 class='ion-header' style=\\\"padding-bottom: 8%\\\" style=\\\"padding-top: 10%\\\">\\n          Remission Plan\\n      </h2>\\n      <h3>\\n          The remission plan will be activated when you are in a relapse and\\n          have 3 consecutive days of low protein levels.\\n      </h3>\\n      <ion-grid>\\n          <ion-row>\\n          <ion-col>\\n              <h4>Amount:</h4>\\n              <h4>(mg)</h4>\\n              <h5>\\n                  <input formControlName=\\\"remissionAmount\\\" type=\\\"number\\\" class=\\\"rcorners1\\\">\\n  \\n              </h5>\\n          </ion-col>\\n          <ion-col>\\n              <h4>Duration:</h4>\\n              <h4>(days)</h4>\\n              <h5>\\n                  <input formControlName=\\\"remissionDuration\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          <ion-col>\\n              <h4>Times:</h4>\\n              <h4>(per int)</h4>\\n              <h5>\\n                  <input formControlName=\\\"remissionTimes\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          <ion-col width=\\\"25%\\\">\\n              <h4>Interval:</h4>\\n              <h4>(days)</h4>\\n              <h5>\\n                  <input formControlName=\\\"remissionInterval\\\" type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n              </h5>\\n          </ion-col>\\n          </ion-row>\\n      </ion-grid>\\n      <div class=\\\"error-messages\\\">\\n            <ng-container *ngFor=\\\"let error of error_messages.maintenanceDose\\\">\\n              <div class=\\\"error-messages\\\" *ngIf=\\\"treatmentForm.get('remissionAmount').hasError(error.type) && (treatmentForm.get('remissionAmount').dirty || treatmentForm.get('remissionAmount').touched)\\\">\\n                {{ error.message }}\\n              </div>\\n            </ng-container>\\n    </div>\\n      <ion-grid>\\n          <ion-row>\\n              <ion-col>\\n                  <div formArrayName=\\\"moreRemissionAmount\\\">\\n                      <div *ngFor=\\\"let remissionControl of treatmentForm.get('moreRemissionAmount').controls; let i = index\\\">\\n                          <h5>\\n                              <input [formControlName]=\\\"i\\\"  type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                          </h5>\\n                      </div>\\n                  </div>\\n              </ion-col>\\n              <ion-col>\\n                  <div formArrayName=\\\"moreRemissionDuration\\\">\\n                      <div *ngFor=\\\"let remissionControl of treatmentForm.get('moreRemissionDuration').controls; let i = index\\\">\\n                          <h5>\\n                              <input [formControlName]=\\\"i\\\"  type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                          </h5>\\n                      </div>\\n                  </div>\\n              </ion-col>\\n              <ion-col>\\n                  <div formArrayName=\\\"moreRemissionTimes\\\">\\n                      <div *ngFor=\\\"let remissionControl of treatmentForm.get('moreRemissionTimes').controls; let i = index\\\">\\n                          <h5>\\n                              <input [formControlName]=\\\"i\\\"  type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                          </h5>\\n                      </div>\\n                  </div>\\n              </ion-col>\\n              <ion-col>\\n                  <div formArrayName=\\\"moreRemissionInterval\\\">\\n                      <div *ngFor=\\\"let remissionControl of treatmentForm.get('moreRemissionInterval').controls; let i = index\\\">\\n                          <h5>\\n                              <input [formControlName]=\\\"i\\\"  type=\\\"number\\\" value=\\\"\\\" class=\\\"rcorners1\\\">\\n                          </h5>\\n                      </div>\\n                  </div>\\n              </ion-col>\\n          </ion-row>\\n      </ion-grid>\\n  \\n      <div class=\\\"box\\\">\\n      <h6>\\n          <ion-button class=\\\"bottom-left\\\" size=\\\"small\\\" (click)=\\\"removeRemissionAmount(i); removeRemissionDuration(i); removeRemissionTimes(i); removeRemissionInterval(i)\\\">-</ion-button>\\n      </h6>\\n      <h4>\\n        <ion-button class=\\\"bottom-right\\\" size=\\\"small\\\" (click)=\\\"addRemissionAmount(i); addRemissionDuration(i); addRemissionTimes(i); addRemissionInterval(i)\\\">+   Add another step</ion-button>\\n      </h4>\\n      </div>\\n  \\n      <div class=\\\"box\\\" style=\\\"padding-top: 10%\\\">\\n      <ion-button [disabled]=\\\"!treatmentForm.valid\\\"  class=\\\"bottom-right\\\" size=\\\"small\\\" shape=\\\"round\\\" (click)=\\\"presentActionSheet()\\\">\\n          <ion-icon slot=\\\"end\\\" name=\\\"arrow-round-forward\\\"></ion-icon>\\n          Next\\n      </ion-button>\\n      </div>\\n  </form>\\n  </ion-content>\"","module.exports = \"h3 {\\n  color: white;\\n  text-align: center;\\n  font-size: 15px !important; }\\n\\nh4 {\\n  color: white;\\n  text-align: center;\\n  font-size: 10px !important; }\\n\\nh5 {\\n  color: black;\\n  text-align: center;\\n  font-size: 20px !important; }\\n\\nh6 {\\n  color: white;\\n  text-align: right;\\n  font-size: 10px !important;\\n  background-color: none; }\\n\\n.height {\\n  line-height: 11px; }\\n\\n.error-messages {\\n  color: red;\\n  text-align: center;\\n  font-size: .9em; }\\n\\n.rcorners {\\n  align-content: center;\\n  border-radius: 15px;\\n  background-color: white;\\n  width: 30%;\\n  height: 100%;\\n  text-align: center;\\n  border: 0px; }\\n\\n.rcorners1 {\\n  align-content: center;\\n  border-radius: 15px;\\n  background-color: white;\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  margin: 0;\\n  padding: 0;\\n  border: 0px; }\\n\\n.box {\\n  position: relative;\\n  margin: 5%;\\n  padding: 5%; }\\n\\n.bottom-right {\\n  position: absolute;\\n  bottom: 0;\\n  right: 0; }\\n\\n.bottom-left {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aW5ncGluZ3RzYW5nL0Rlc2t0b3AvQ09NUDAwNjdfMjAxOV9UZWFtMTUvbXlOZXBocm90aWNOb3RlYm9vay9zcmMvYXBwL29uYm9hcmR0cmVhdG1lbnRwbGFuL29uYm9hcmR0cmVhdG1lbnRwbGFuLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsMEJBQTBCLEVBQUE7O0FBRzlCO0VBQ0ksWUFBWTtFQUNaLGtCQUFrQjtFQUNsQiwwQkFBMEIsRUFBQTs7QUFHOUI7RUFDSSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLDBCQUEwQixFQUFBOztBQUc5QjtFQUNJLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsMEJBQTBCO0VBQzFCLHNCQUFzQixFQUFBOztBQUcxQjtFQUNJLGlCQUFpQixFQUFBOztBQUVyQjtFQUNJLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsZUFBZSxFQUFBOztBQUduQjtFQUNJLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLFVBQVU7RUFDVixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFdBQVcsRUFBQTs7QUFHZjtFQUNJLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsV0FBVyxFQUFBOztBQUdmO0VBQ0Esa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXLEVBQUE7O0FBR1g7RUFDSSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFFBQVEsRUFBQTs7QUFHWjtFQUNJLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsT0FBTyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvb25ib2FyZHRyZWF0bWVudHBsYW4vb25ib2FyZHRyZWF0bWVudHBsYW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5oMyB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDE1cHggIWltcG9ydGFudDtcbn1cblxuaDQge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxMHB4ICFpbXBvcnRhbnQ7XG59XG5cbmg1IHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMjBweCAhaW1wb3J0YW50O1xufVxuXG5oNiB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMTBweCAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7IFxufVxuXG4uaGVpZ2h0IHtcbiAgICBsaW5lLWhlaWdodDogMTFweDtcbn1cbi5lcnJvci1tZXNzYWdlcyB7XG4gICAgY29sb3I6IHJlZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAuOWVtO1xufVxuXG4ucmNvcm5lcnMge1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyBcbiAgICB3aWR0aDogMzAlO1xuICAgIGhlaWdodDogMTAwJTsgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogMHB4O1xufVxuXG4ucmNvcm5lcnMxIHtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiAwcHg7XG59XG5cbi5ib3gge1xucG9zaXRpb246IHJlbGF0aXZlO1xubWFyZ2luOiA1JTtcbnBhZGRpbmc6IDUlO1xufVxuXG4uYm90dG9tLXJpZ2h0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwO1xuICAgIHJpZ2h0OiAwO1xufVxuXG4uYm90dG9tLWxlZnQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { DatabaseService } from '../services/database.service';\nimport { Router } from '@angular/router';\nimport { ActionSheetController } from '@ionic/angular'\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-onboardtreatmentplan',\n  templateUrl: './onboardtreatmentplan.page.html',\n  styleUrls: ['./onboardtreatmentplan.page.scss'],\n})\nexport class OnboardtreatmentplanPage implements OnInit {\n \n  treatmentForm: FormGroup;\n  maintenanceDuration = 99999999;\n  relapseDuration = 99999999;\n  myTreatmentDetails: any;\n  currentState: any;\n\n  error_messages = {\n    'maintenanceDose': [\n      { type: 'required', message: 'These are all required. Enter \"0\" if none.' }\n    ]\n  }\n\n  constructor(public actionSheetController: ActionSheetController, private router: Router, public formBuilder: FormBuilder, private database:DatabaseService) { \n\n    this.treatmentForm = this.formBuilder.group({\n      maintenanceDose: new FormControl('',Validators.compose([\n        Validators.required\n      ])),\n      maintenanceTimes: new FormControl(''),\n      maintenanceInterval: new FormControl(''),\n\n      relapseAmount: new FormControl('',Validators.compose([\n        Validators.required\n      ])),\n      relapseTimes: new FormControl(''),\n      relapseInterval: new FormControl(''),\n\n      remissionAmount: new FormControl('',Validators.compose([\n        Validators.required\n      ])),\n      remissionDuration: new FormControl(''),\n      remissionTimes: new FormControl(''),\n      remissionInterval: new FormControl(''),\n\n      moreRemissionAmount: new FormArray([]),\n      moreRemissionDuration: new FormArray([]),\n      moreRemissionTimes: new FormArray([]),\n      moreRemissionInterval: new FormArray([])\n    });\n  }\n\n  addRemissionAmount(){\n    (<FormArray>this.treatmentForm.get('moreRemissionAmount')).push(new FormControl(''));\n  }\n\n  removeRemissionAmount(index){\n    (<FormArray>this.treatmentForm.get('moreRemissionAmount')).removeAt(index);\n  }\n\n  addRemissionDuration(){\n    (<FormArray>this.treatmentForm.get('moreRemissionDuration')).push(new FormControl(''));\n  }\n\n  removeRemissionDuration(index){\n    (<FormArray>this.treatmentForm.get('moreRemissionDuration')).removeAt(index);\n  }\n\n  addRemissionTimes(){\n    (<FormArray>this.treatmentForm.get('moreRemissionTimes')).push(new FormControl(''));\n  }\n\n  removeRemissionTimes(index){\n    (<FormArray>this.treatmentForm.get('moreRemissionTimes')).removeAt(index);\n  }\n\n  addRemissionInterval(){\n    (<FormArray>this.treatmentForm.get('moreRemissionInterval')).push(new FormControl(''));\n  }\n\n  removeRemissionInterval(index){\n    (<FormArray>this.treatmentForm.get('moreRemissionInterval')).removeAt(index);\n  }\n\n\n  ngOnInit() {\n\n  }\n\n  // backToDetails() {\n  //   this.router.navigateByUrl('../onboard');\n  // }\n\n  async presentActionSheet() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'What state are you currently in?',\n      buttons: [{\n        text: 'Maintenance',\n        handler: () => {\n          console.log('Maintenance selected');\n          this.currentState = 1;\n          this.treatmentplan()\n        }\n      }, {\n        text: 'Relapse',\n        handler: () => {\n          console.log('Relapse selected');\n          this.currentState = 2;\n          this.treatmentplan()\n        }\n      }, {\n        text: 'Remission',\n        handler: () => {\n          console.log('Remission selected');\n          this.currentState = 3;\n          this.treatmentplan()\n        }\n      }]\n    });\n    await actionSheet.present();\n  }\n\n\n  treatmentplan(){\n    var maintenance = [\"maintenance\",\n      this.maintenanceDuration,\n      this.treatmentForm.value.maintenanceDose, \n      this.treatmentForm.value.maintenanceTimes,\n      this.treatmentForm.value.maintenanceInterval];\n\n    var relapse = [\"relapse\",\n      this.relapseDuration,\n      this.treatmentForm.value.relapseAmount, \n      this.treatmentForm.value.relapseTimes,\n      this.treatmentForm.value.relapseInterval];\n\n    var remission = [\"remission\",\n      this.treatmentForm.value.remissionDuration, \n      this.treatmentForm.value.remissionAmount,\n      this.treatmentForm.value.relapseTimes,\n      this.treatmentForm.value.relapseInterval];\n    \n    var Amount = this.treatmentForm.value.moreRemissionAmount;\n    var Duration = this.treatmentForm.value.moreRemissionDuration;\n    var Times = this.treatmentForm.value.moreRemissionTimes;\n    var Interval = this.treatmentForm.value.moreRemissionInterval;\n\n    var treatmentplan = [maintenance, relapse, remission];\n\n    for (var i = 0; i < Amount.length; i++){ \n      treatmentplan.push(window['remission' + i] = [\"remission\" +i, Duration[i], Amount[i], Times[i], Interval[i]]);\n    };\n\n\n    console.log('Maintenance Dose: ', this.treatmentForm.value.maintenanceDose);\n    console.log('Maintenance Duration: ', this.maintenanceDuration);\n    console.log('Maintenance Times: ', this.treatmentForm.value.maintenanceTimes);\n    console.log('Maintenance Interval: ', this.treatmentForm.value.maintenanceInterval);\n    console.log('Relapse Amount: ', this.treatmentForm.value.relapseAmount);\n    console.log('Relapse Duration: ', this.relapseDuration);\n    console.log('Relapse Times: ', this.treatmentForm.value.relapseTimes);\n    console.log('Relapse Interval: ', this.treatmentForm.value.relapseInterval);\n    console.log('Remission Amount: ', this.treatmentForm.value.remissionAmount);\n    console.log('Remission Duration: ', this.treatmentForm.value.remissionDuration);\n    console.log('Remission Times: ', this.treatmentForm.value.remissionTimes);\n    console.log('Remission Interval: ', this.treatmentForm.value.remissionInterval);\n    console.log('More Remission Amount: ', this.treatmentForm.value.moreRemissionAmount);\n    console.log('More Remission Duration: ', this.treatmentForm.value.moreRemissionDuration);\n    console.log('More Remission Times: ', this.treatmentForm.value.moreRemissionTimes);\n    console.log('More Remission Interval: ', this.treatmentForm.value.moreRemissionInterval);\n    console.log('Maintenance: ',maintenance);\n    console.log('Relapse: ',relapse);\n    console.log('Remission',remission);\n    console.log('TreatmentPlan Array: ',treatmentplan);\n    console.log('TreatmentPlan Array: ',treatmentplan[0][1]); \n    console.log('Current State: ',this.currentState);\n\n\n\n    for (var i = 0; i < treatmentplan.length; i++){\n\n      var treatment = [];\n\n      treatment = [1, \n        treatmentplan[i][0], \n        treatmentplan[i][1], \n        treatmentplan[i][2], \n        treatmentplan[i][3], \n        treatmentplan[i][4],\n      ]\n      this.database.insertData(treatment, \"treatment_stateReal\");\n      console.log('Treatment: ',treatment);\n    }\n\n    var now = moment().format('YYYY-MM-DD')+' 00:00:00'\n    console.log('Date: ',now);\n\n\n    var activeState = [\n      this.currentState,\n      now\n    ]\n    this.database.insertData(activeState, \"active_treatment_state\");\n\n    this.router.navigateByUrl('/onboardothermeds');\n\n  }\n\n\n}\n"],"sourceRoot":""}